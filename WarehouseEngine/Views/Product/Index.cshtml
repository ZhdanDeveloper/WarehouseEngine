@using System.Text.Json;
@using EfCoreDataAccessLayer.Models;
@using WarehouseEngineBusinessLayer.Interfaces;
@using WarehouseEngineBusinessLayer.ViewModels;
@model PaginatedList<ProductViewModel>

<form asp-controller="Product" asp-action="Index" method="get">
    <div class="input-group mb-3">
        <input type="text" class="form-control" name="searchString" value="@ViewData["CurrentFilter"]" placeholder="Пошук...">
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" type="submit">Пошук</button>
        </div>
    </div>
</form>
<table class="table table-striped">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Назва
            </th>
            <th>
                Опис
            </th>
            <th>
                Кількість
            </th>
            <th>
                Ціна
            </th>
            <th>
                Постачальник
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <th>
                    @item.Id
                </th>
                <th>
                    @item.Name
                </th>
                <th>
                    @item.Description
                </th>
                <th>
                    @item.Quantity
                </th>
                <th>
                    @item.Price грн
                </th>
                <th>
                    @{ var sup = await (ViewBag.supService as ICrudService<Supplier, SupplierViewModel>).GetByIdAsync(item.SupplierId); }
                    @sup.Name
                </th>
                <td>
                    @Html.ActionLink("Редагувати", "Edit", new { id= item.Id }) |
                    @Html.ActionLink("Переглянути", "Products", new { id= item.Id }) |
                    @Html.ActionLink("Видалити", "Delete", new {  id= item.Id  })
                </td>
                <th></th>
            </tr>
        }
    </tbody>
</table>
<p>
    @{
        var json = JsonSerializer.Serialize(Model).ToString();
    }
    @if (Model.Count > 0)
    {
            <a class="btn btn-primary" href="@Url.Action("ExcelExport", "Product", new { data = json })">Експортувати в ексель</a>
            <a class="btn btn-primary" href="@Url.Action("ExportAllProductData", "Product")">Експортувати всі продукти в ексель</a>
    }
    <a asp-action="Create" class="btn btn-primary">Додати новий продукт</a>
</p>
<div class="d-flex justify-content-center">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumberParam = Model.PageIndex - 1, searchString = ViewData["CurrentFilter"] })">Previous</a>
                </li>
            }
            @if (Model.TotalPages <= 20)
            {
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    if (i == Model.PageIndex)
                    {
                        <li class="page-item active">
                            <span class="page-link">@i</span>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { pageNumberParam = i, searchString = ViewData["CurrentFilter"] })">@i</a>
                        </li>
                    }
                }
            }
            else
            {
                @if (Model.PageIndex > 10)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { pageNumberParam = 1, searchString = ViewData["CurrentFilter"] })">1</a>
                    </li>
                    <li class="page-item">
                        <span class="page-link">...</span>
                    </li>
                }
                @for (int i = Model.PageIndex - 5; i <= Model.PageIndex + 5; i++)
                {
                    if (i == Model.PageIndex)
                    {
                        <li class="page-item active">
                            <span class="page-link">@i</span>
                        </li>
                    }
                    else if (i >= 1 && i <= Model.TotalPages)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { pageNumberParam = i, searchString = ViewData["CurrentFilter"] })">@i</a>
                        </li>
                    }
                }
                @if (Model.PageIndex < Model.TotalPages - 9)
                {
                    <li class="page-item">
                        <span class="page-link">...</span>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { pageNumberParam = Model.TotalPages, searchString = ViewData["CurrentFilter"] })">@Model.TotalPages</a>
                    </li>
                }
            }
            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumberParam = Model.PageIndex + 1, searchString = ViewData["CurrentFilter"] })">Next</a>
                </li>
            }
        </ul>
    </nav>
</div>
